/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package thrift.genereated.retailer;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class Product implements org.apache.thrift.TBase<Product, Product._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Product");

  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField MODEL_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("modelNo", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField IMAGE_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("imageUrl", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField URL_FIELD_DESC = new org.apache.thrift.protocol.TField("url", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField PRICE_HISTORY_FIELD_DESC = new org.apache.thrift.protocol.TField("priceHistory", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField SELL_RANK_HISTORY_FIELD_DESC = new org.apache.thrift.protocol.TField("sellRankHistory", org.apache.thrift.protocol.TType.LIST, (short)7);
  private static final org.apache.thrift.protocol.TField REVIEW_HISTORY_FIELD_DESC = new org.apache.thrift.protocol.TField("reviewHistory", org.apache.thrift.protocol.TType.LIST, (short)8);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ProductStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ProductTupleSchemeFactory());
  }

  public int productId; // required
  public String name; // required
  public String modelNo; // required
  public String imageUrl; // required
  public String url; // required
  public PriceHistory priceHistory; // required
  public List<Tick> sellRankHistory; // required
  public List<Review> reviewHistory; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PRODUCT_ID((short)1, "productId"),
    NAME((short)2, "name"),
    MODEL_NO((short)3, "modelNo"),
    IMAGE_URL((short)4, "imageUrl"),
    URL((short)5, "url"),
    PRICE_HISTORY((short)6, "priceHistory"),
    SELL_RANK_HISTORY((short)7, "sellRankHistory"),
    REVIEW_HISTORY((short)8, "reviewHistory");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PRODUCT_ID
          return PRODUCT_ID;
        case 2: // NAME
          return NAME;
        case 3: // MODEL_NO
          return MODEL_NO;
        case 4: // IMAGE_URL
          return IMAGE_URL;
        case 5: // URL
          return URL;
        case 6: // PRICE_HISTORY
          return PRICE_HISTORY;
        case 7: // SELL_RANK_HISTORY
          return SELL_RANK_HISTORY;
        case 8: // REVIEW_HISTORY
          return REVIEW_HISTORY;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PRODUCTID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MODEL_NO, new org.apache.thrift.meta_data.FieldMetaData("modelNo", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IMAGE_URL, new org.apache.thrift.meta_data.FieldMetaData("imageUrl", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.URL, new org.apache.thrift.meta_data.FieldMetaData("url", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRICE_HISTORY, new org.apache.thrift.meta_data.FieldMetaData("priceHistory", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PriceHistory.class)));
    tmpMap.put(_Fields.SELL_RANK_HISTORY, new org.apache.thrift.meta_data.FieldMetaData("sellRankHistory", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Tick.class))));
    tmpMap.put(_Fields.REVIEW_HISTORY, new org.apache.thrift.meta_data.FieldMetaData("reviewHistory", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Review.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Product.class, metaDataMap);
  }

  public Product() {
  }

  public Product(
    int productId,
    String name,
    String modelNo,
    String imageUrl,
    String url,
    PriceHistory priceHistory,
    List<Tick> sellRankHistory,
    List<Review> reviewHistory)
  {
    this();
    this.productId = productId;
    setProductIdIsSet(true);
    this.name = name;
    this.modelNo = modelNo;
    this.imageUrl = imageUrl;
    this.url = url;
    this.priceHistory = priceHistory;
    this.sellRankHistory = sellRankHistory;
    this.reviewHistory = reviewHistory;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Product(Product other) {
    __isset_bitfield = other.__isset_bitfield;
    this.productId = other.productId;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetModelNo()) {
      this.modelNo = other.modelNo;
    }
    if (other.isSetImageUrl()) {
      this.imageUrl = other.imageUrl;
    }
    if (other.isSetUrl()) {
      this.url = other.url;
    }
    if (other.isSetPriceHistory()) {
      this.priceHistory = new PriceHistory(other.priceHistory);
    }
    if (other.isSetSellRankHistory()) {
      List<Tick> __this__sellRankHistory = new ArrayList<Tick>();
      for (Tick other_element : other.sellRankHistory) {
        __this__sellRankHistory.add(new Tick(other_element));
      }
      this.sellRankHistory = __this__sellRankHistory;
    }
    if (other.isSetReviewHistory()) {
      List<Review> __this__reviewHistory = new ArrayList<Review>();
      for (Review other_element : other.reviewHistory) {
        __this__reviewHistory.add(new Review(other_element));
      }
      this.reviewHistory = __this__reviewHistory;
    }
  }

  public Product deepCopy() {
    return new Product(this);
  }

  @Override
  public void clear() {
    setProductIdIsSet(false);
    this.productId = 0;
    this.name = null;
    this.modelNo = null;
    this.imageUrl = null;
    this.url = null;
    this.priceHistory = null;
    this.sellRankHistory = null;
    this.reviewHistory = null;
  }

  public int getProductId() {
    return this.productId;
  }

  public Product setProductId(int productId) {
    this.productId = productId;
    setProductIdIsSet(true);
    return this;
  }

  public void unsetProductId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRODUCTID_ISSET_ID);
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return EncodingUtils.testBit(__isset_bitfield, __PRODUCTID_ISSET_ID);
  }

  public void setProductIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRODUCTID_ISSET_ID, value);
  }

  public String getName() {
    return this.name;
  }

  public Product setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public String getModelNo() {
    return this.modelNo;
  }

  public Product setModelNo(String modelNo) {
    this.modelNo = modelNo;
    return this;
  }

  public void unsetModelNo() {
    this.modelNo = null;
  }

  /** Returns true if field modelNo is set (has been assigned a value) and false otherwise */
  public boolean isSetModelNo() {
    return this.modelNo != null;
  }

  public void setModelNoIsSet(boolean value) {
    if (!value) {
      this.modelNo = null;
    }
  }

  public String getImageUrl() {
    return this.imageUrl;
  }

  public Product setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

  public void unsetImageUrl() {
    this.imageUrl = null;
  }

  /** Returns true if field imageUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetImageUrl() {
    return this.imageUrl != null;
  }

  public void setImageUrlIsSet(boolean value) {
    if (!value) {
      this.imageUrl = null;
    }
  }

  public String getUrl() {
    return this.url;
  }

  public Product setUrl(String url) {
    this.url = url;
    return this;
  }

  public void unsetUrl() {
    this.url = null;
  }

  /** Returns true if field url is set (has been assigned a value) and false otherwise */
  public boolean isSetUrl() {
    return this.url != null;
  }

  public void setUrlIsSet(boolean value) {
    if (!value) {
      this.url = null;
    }
  }

  public PriceHistory getPriceHistory() {
    return this.priceHistory;
  }

  public Product setPriceHistory(PriceHistory priceHistory) {
    this.priceHistory = priceHistory;
    return this;
  }

  public void unsetPriceHistory() {
    this.priceHistory = null;
  }

  /** Returns true if field priceHistory is set (has been assigned a value) and false otherwise */
  public boolean isSetPriceHistory() {
    return this.priceHistory != null;
  }

  public void setPriceHistoryIsSet(boolean value) {
    if (!value) {
      this.priceHistory = null;
    }
  }

  public int getSellRankHistorySize() {
    return (this.sellRankHistory == null) ? 0 : this.sellRankHistory.size();
  }

  public java.util.Iterator<Tick> getSellRankHistoryIterator() {
    return (this.sellRankHistory == null) ? null : this.sellRankHistory.iterator();
  }

  public void addToSellRankHistory(Tick elem) {
    if (this.sellRankHistory == null) {
      this.sellRankHistory = new ArrayList<Tick>();
    }
    this.sellRankHistory.add(elem);
  }

  public List<Tick> getSellRankHistory() {
    return this.sellRankHistory;
  }

  public Product setSellRankHistory(List<Tick> sellRankHistory) {
    this.sellRankHistory = sellRankHistory;
    return this;
  }

  public void unsetSellRankHistory() {
    this.sellRankHistory = null;
  }

  /** Returns true if field sellRankHistory is set (has been assigned a value) and false otherwise */
  public boolean isSetSellRankHistory() {
    return this.sellRankHistory != null;
  }

  public void setSellRankHistoryIsSet(boolean value) {
    if (!value) {
      this.sellRankHistory = null;
    }
  }

  public int getReviewHistorySize() {
    return (this.reviewHistory == null) ? 0 : this.reviewHistory.size();
  }

  public java.util.Iterator<Review> getReviewHistoryIterator() {
    return (this.reviewHistory == null) ? null : this.reviewHistory.iterator();
  }

  public void addToReviewHistory(Review elem) {
    if (this.reviewHistory == null) {
      this.reviewHistory = new ArrayList<Review>();
    }
    this.reviewHistory.add(elem);
  }

  public List<Review> getReviewHistory() {
    return this.reviewHistory;
  }

  public Product setReviewHistory(List<Review> reviewHistory) {
    this.reviewHistory = reviewHistory;
    return this;
  }

  public void unsetReviewHistory() {
    this.reviewHistory = null;
  }

  /** Returns true if field reviewHistory is set (has been assigned a value) and false otherwise */
  public boolean isSetReviewHistory() {
    return this.reviewHistory != null;
  }

  public void setReviewHistoryIsSet(boolean value) {
    if (!value) {
      this.reviewHistory = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((Integer)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case MODEL_NO:
      if (value == null) {
        unsetModelNo();
      } else {
        setModelNo((String)value);
      }
      break;

    case IMAGE_URL:
      if (value == null) {
        unsetImageUrl();
      } else {
        setImageUrl((String)value);
      }
      break;

    case URL:
      if (value == null) {
        unsetUrl();
      } else {
        setUrl((String)value);
      }
      break;

    case PRICE_HISTORY:
      if (value == null) {
        unsetPriceHistory();
      } else {
        setPriceHistory((PriceHistory)value);
      }
      break;

    case SELL_RANK_HISTORY:
      if (value == null) {
        unsetSellRankHistory();
      } else {
        setSellRankHistory((List<Tick>)value);
      }
      break;

    case REVIEW_HISTORY:
      if (value == null) {
        unsetReviewHistory();
      } else {
        setReviewHistory((List<Review>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PRODUCT_ID:
      return Integer.valueOf(getProductId());

    case NAME:
      return getName();

    case MODEL_NO:
      return getModelNo();

    case IMAGE_URL:
      return getImageUrl();

    case URL:
      return getUrl();

    case PRICE_HISTORY:
      return getPriceHistory();

    case SELL_RANK_HISTORY:
      return getSellRankHistory();

    case REVIEW_HISTORY:
      return getReviewHistory();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PRODUCT_ID:
      return isSetProductId();
    case NAME:
      return isSetName();
    case MODEL_NO:
      return isSetModelNo();
    case IMAGE_URL:
      return isSetImageUrl();
    case URL:
      return isSetUrl();
    case PRICE_HISTORY:
      return isSetPriceHistory();
    case SELL_RANK_HISTORY:
      return isSetSellRankHistory();
    case REVIEW_HISTORY:
      return isSetReviewHistory();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Product)
      return this.equals((Product)that);
    return false;
  }

  public boolean equals(Product that) {
    if (that == null)
      return false;

    boolean this_present_productId = true;
    boolean that_present_productId = true;
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (this.productId != that.productId)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_modelNo = true && this.isSetModelNo();
    boolean that_present_modelNo = true && that.isSetModelNo();
    if (this_present_modelNo || that_present_modelNo) {
      if (!(this_present_modelNo && that_present_modelNo))
        return false;
      if (!this.modelNo.equals(that.modelNo))
        return false;
    }

    boolean this_present_imageUrl = true && this.isSetImageUrl();
    boolean that_present_imageUrl = true && that.isSetImageUrl();
    if (this_present_imageUrl || that_present_imageUrl) {
      if (!(this_present_imageUrl && that_present_imageUrl))
        return false;
      if (!this.imageUrl.equals(that.imageUrl))
        return false;
    }

    boolean this_present_url = true && this.isSetUrl();
    boolean that_present_url = true && that.isSetUrl();
    if (this_present_url || that_present_url) {
      if (!(this_present_url && that_present_url))
        return false;
      if (!this.url.equals(that.url))
        return false;
    }

    boolean this_present_priceHistory = true && this.isSetPriceHistory();
    boolean that_present_priceHistory = true && that.isSetPriceHistory();
    if (this_present_priceHistory || that_present_priceHistory) {
      if (!(this_present_priceHistory && that_present_priceHistory))
        return false;
      if (!this.priceHistory.equals(that.priceHistory))
        return false;
    }

    boolean this_present_sellRankHistory = true && this.isSetSellRankHistory();
    boolean that_present_sellRankHistory = true && that.isSetSellRankHistory();
    if (this_present_sellRankHistory || that_present_sellRankHistory) {
      if (!(this_present_sellRankHistory && that_present_sellRankHistory))
        return false;
      if (!this.sellRankHistory.equals(that.sellRankHistory))
        return false;
    }

    boolean this_present_reviewHistory = true && this.isSetReviewHistory();
    boolean that_present_reviewHistory = true && that.isSetReviewHistory();
    if (this_present_reviewHistory || that_present_reviewHistory) {
      if (!(this_present_reviewHistory && that_present_reviewHistory))
        return false;
      if (!this.reviewHistory.equals(that.reviewHistory))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(Product other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    Product typedOther = (Product)other;

    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(typedOther.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, typedOther.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(typedOther.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, typedOther.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetModelNo()).compareTo(typedOther.isSetModelNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModelNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.modelNo, typedOther.modelNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetImageUrl()).compareTo(typedOther.isSetImageUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetImageUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.imageUrl, typedOther.imageUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUrl()).compareTo(typedOther.isSetUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.url, typedOther.url);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPriceHistory()).compareTo(typedOther.isSetPriceHistory());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPriceHistory()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.priceHistory, typedOther.priceHistory);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellRankHistory()).compareTo(typedOther.isSetSellRankHistory());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellRankHistory()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sellRankHistory, typedOther.sellRankHistory);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReviewHistory()).compareTo(typedOther.isSetReviewHistory());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReviewHistory()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reviewHistory, typedOther.reviewHistory);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Product(");
    boolean first = true;

    sb.append("productId:");
    sb.append(this.productId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("modelNo:");
    if (this.modelNo == null) {
      sb.append("null");
    } else {
      sb.append(this.modelNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("imageUrl:");
    if (this.imageUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.imageUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("url:");
    if (this.url == null) {
      sb.append("null");
    } else {
      sb.append(this.url);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("priceHistory:");
    if (this.priceHistory == null) {
      sb.append("null");
    } else {
      sb.append(this.priceHistory);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellRankHistory:");
    if (this.sellRankHistory == null) {
      sb.append("null");
    } else {
      sb.append(this.sellRankHistory);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("reviewHistory:");
    if (this.reviewHistory == null) {
      sb.append("null");
    } else {
      sb.append(this.reviewHistory);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'productId' because it's a primitive and you chose the non-beans generator.
    if (name == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'name' was not present! Struct: " + toString());
    }
    if (modelNo == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'modelNo' was not present! Struct: " + toString());
    }
    if (imageUrl == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'imageUrl' was not present! Struct: " + toString());
    }
    if (url == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'url' was not present! Struct: " + toString());
    }
    if (priceHistory == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'priceHistory' was not present! Struct: " + toString());
    }
    if (sellRankHistory == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'sellRankHistory' was not present! Struct: " + toString());
    }
    if (reviewHistory == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'reviewHistory' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (priceHistory != null) {
      priceHistory.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProductStandardSchemeFactory implements SchemeFactory {
    public ProductStandardScheme getScheme() {
      return new ProductStandardScheme();
    }
  }

  private static class ProductStandardScheme extends StandardScheme<Product> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Product struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.productId = iprot.readI32();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MODEL_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.modelNo = iprot.readString();
              struct.setModelNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // IMAGE_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.imageUrl = iprot.readString();
              struct.setImageUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.url = iprot.readString();
              struct.setUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PRICE_HISTORY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.priceHistory = new PriceHistory();
              struct.priceHistory.read(iprot);
              struct.setPriceHistoryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SELL_RANK_HISTORY
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list24 = iprot.readListBegin();
                struct.sellRankHistory = new ArrayList<Tick>(_list24.size);
                for (int _i25 = 0; _i25 < _list24.size; ++_i25)
                {
                  Tick _elem26; // required
                  _elem26 = new Tick();
                  _elem26.read(iprot);
                  struct.sellRankHistory.add(_elem26);
                }
                iprot.readListEnd();
              }
              struct.setSellRankHistoryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // REVIEW_HISTORY
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list27 = iprot.readListBegin();
                struct.reviewHistory = new ArrayList<Review>(_list27.size);
                for (int _i28 = 0; _i28 < _list27.size; ++_i28)
                {
                  Review _elem29; // required
                  _elem29 = new Review();
                  _elem29.read(iprot);
                  struct.reviewHistory.add(_elem29);
                }
                iprot.readListEnd();
              }
              struct.setReviewHistoryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetProductId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'productId' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Product struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
      oprot.writeI32(struct.productId);
      oprot.writeFieldEnd();
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.modelNo != null) {
        oprot.writeFieldBegin(MODEL_NO_FIELD_DESC);
        oprot.writeString(struct.modelNo);
        oprot.writeFieldEnd();
      }
      if (struct.imageUrl != null) {
        oprot.writeFieldBegin(IMAGE_URL_FIELD_DESC);
        oprot.writeString(struct.imageUrl);
        oprot.writeFieldEnd();
      }
      if (struct.url != null) {
        oprot.writeFieldBegin(URL_FIELD_DESC);
        oprot.writeString(struct.url);
        oprot.writeFieldEnd();
      }
      if (struct.priceHistory != null) {
        oprot.writeFieldBegin(PRICE_HISTORY_FIELD_DESC);
        struct.priceHistory.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.sellRankHistory != null) {
        oprot.writeFieldBegin(SELL_RANK_HISTORY_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.sellRankHistory.size()));
          for (Tick _iter30 : struct.sellRankHistory)
          {
            _iter30.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.reviewHistory != null) {
        oprot.writeFieldBegin(REVIEW_HISTORY_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.reviewHistory.size()));
          for (Review _iter31 : struct.reviewHistory)
          {
            _iter31.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProductTupleSchemeFactory implements SchemeFactory {
    public ProductTupleScheme getScheme() {
      return new ProductTupleScheme();
    }
  }

  private static class ProductTupleScheme extends TupleScheme<Product> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Product struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI32(struct.productId);
      oprot.writeString(struct.name);
      oprot.writeString(struct.modelNo);
      oprot.writeString(struct.imageUrl);
      oprot.writeString(struct.url);
      struct.priceHistory.write(oprot);
      {
        oprot.writeI32(struct.sellRankHistory.size());
        for (Tick _iter32 : struct.sellRankHistory)
        {
          _iter32.write(oprot);
        }
      }
      {
        oprot.writeI32(struct.reviewHistory.size());
        for (Review _iter33 : struct.reviewHistory)
        {
          _iter33.write(oprot);
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Product struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.productId = iprot.readI32();
      struct.setProductIdIsSet(true);
      struct.name = iprot.readString();
      struct.setNameIsSet(true);
      struct.modelNo = iprot.readString();
      struct.setModelNoIsSet(true);
      struct.imageUrl = iprot.readString();
      struct.setImageUrlIsSet(true);
      struct.url = iprot.readString();
      struct.setUrlIsSet(true);
      struct.priceHistory = new PriceHistory();
      struct.priceHistory.read(iprot);
      struct.setPriceHistoryIsSet(true);
      {
        org.apache.thrift.protocol.TList _list34 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.sellRankHistory = new ArrayList<Tick>(_list34.size);
        for (int _i35 = 0; _i35 < _list34.size; ++_i35)
        {
          Tick _elem36; // required
          _elem36 = new Tick();
          _elem36.read(iprot);
          struct.sellRankHistory.add(_elem36);
        }
      }
      struct.setSellRankHistoryIsSet(true);
      {
        org.apache.thrift.protocol.TList _list37 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.reviewHistory = new ArrayList<Review>(_list37.size);
        for (int _i38 = 0; _i38 < _list37.size; ++_i38)
        {
          Review _elem39; // required
          _elem39 = new Review();
          _elem39.read(iprot);
          struct.reviewHistory.add(_elem39);
        }
      }
      struct.setReviewHistoryIsSet(true);
    }
  }

}

