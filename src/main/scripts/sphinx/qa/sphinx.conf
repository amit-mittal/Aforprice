#keep this file in sync with src/main/scripts/sphinx/qa/sphinx.conf

#
# Minimal Sphinx configuration sample (clean, simple, functional)
#

source srcBase
{
        type                    = mysql
        sql_host                = 192.168.1.5
        sql_user                = mysqlqa
        sql_pass                = mysqlPa2s
        sql_db                  = PRODUCTS
        sql_port                = 3306  # optional, default is 3306
        sql_query_pre = SET NAMES utf8
}

source srcCategoryMain : srcBase
{
        sql_query_pre = REPLACE INTO SPHX_INDEX_COUNTER SELECT 1, MAX(CATEGORY_ID), NOW() FROM CATEGORY
        #we need category_name twice: 1 for search and 1 for attribute, attribute can't be searched
        sql_query = \
                SELECT CATEGORY_ID as ID, CATEGORY_NAME AS NAME_ATTR, CATEGORY_NAME, URL, UNIX_TIMESTAMP(TIME_MODIFIED) as TIME_MODIFIED from CATEGORY \
                WHERE CATEGORY_ID <= (SELECT MAX_MAIN_IDX_ID FROM SPHX_INDEX_COUNTER WHERE INDEX_ID=1)

        sql_attr_string = CATEGORY_NAME
        sql_attr_string = URL
        sql_attr_timestamp      = TIME_MODIFIED
        #sql_query_info         = SELECT * FROM CATEGORY WHERE CATEGORY_ID=$ID
}

source srcCategoryDelta : srcCategoryMain
{
        #required otherwise replace query will be inherited also
        sql_query_pre = SET NAMES utf8
        sql_query = \
                SELECT CATEGORY_ID as ID, CATEGORY_NAME AS NAME_ATTR, CATEGORY_NAME, URL, UNIX_TIMESTAMP(TIME_MODIFIED) as TIME_MODIFIED from CATEGORY \
                WHERE CATEGORY_ID > (SELECT MAX_MAIN_IDX_ID FROM SPHX_INDEX_COUNTER WHERE INDEX_ID=1)
}

source srcProductMain : srcBase
{
        #sql_query_pre = REPLACE INTO SPHX_INDEX_COUNTER SELECT 2, MAX(PRODUCT_ID), NOW() FROM PRODUCT_SUMMARY
        sql_query_pre = REPLACE INTO SPHX_INDEX_COUNTER SELECT 2, 100000, NOW() FROM PRODUCT_SUMMARY
        sql_query = \
                SELECT P.PRODUCT_ID as ID , PRODUCT_NAME AS NAME_ATTR, PRODUCT_NAME, CATEGORY_ID, BEST_SELLER_RANK from PRODUCT_SUMMARY P, PRODUCT_CATEGORY C \
                WHERE P.PRODUCT_ID <= (SELECT MAX_MAIN_IDX_ID FROM SPHX_INDEX_COUNTER WHERE INDEX_ID=2) and C.PRODUCT_ID = P.PRODUCT_ID
        sql_attr_string = NAME_ATTR
        sql_attr_uint = CATEGORY_ID
        sql_attr_uint = BEST_SELLER_RANK
}

source srcProductDelta : srcProductMain
{
        sql_query_pre = SET NAMES utf8
        sql_query = \
                SELECT P.PRODUCT_ID as ID , PRODUCT_NAME AS NAME_ATTR, PRODUCT_NAME, CATEGORY_ID, BEST_SELLER_RANK from PRODUCT_SUMMARY P, PRODUCT_CATEGORY C \
                WHERE P.PRODUCT_ID <= (SELECT MAX_MAIN_IDX_ID FROM SPHX_INDEX_COUNTER WHERE INDEX_ID=2) and C.PRODUCT_ID = P.PRODUCT_ID

}

index categoryMain
{
        source                  = srcCategoryMain
        path                    = c:\users\ashish\sphinx\qa\data\category\main
        docinfo                 = extern
        charset_type    = sbcs
}

index categoryDelta : categoryMain
{
        source                  = srcCategoryDelta
        path                    = c:\users\ashish\sphinx\qa\data\category\delta
}

index productMain
{
        source                  = srcProductMain
        path                    = c:\users\ashish\sphinx\qa\data\product\main
        docinfo                 = extern
        charset_type    = sbcs
}

index productDelta : productMain
{
        source                  = srcProductDelta
        path                    = c:\users\ashish\sphinx\qa\data\product\delta
}

indexer
{
        mem_limit               = 32M
}

searchd
{
        listen                  = 9312
        listen                  = 9306:mysql41
        log                     = c:\users\ashish\sphinx\qa\log\searchd.log
        query_log               = c:\users\ashish\sphinx\qa\log\query.log
        read_timeout            = 5
        max_children            = 30
        pid_file                = c:\users\ashish\sphinx\qa\log\searchd.pid
        max_matches             = 1000
        seamless_rotate         = 1
        preopen_indexes         = 1
        unlink_old              = 1
        workers                 = threads # for RT to work
}